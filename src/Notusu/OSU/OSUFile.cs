using System.Text;

namespace Notusu.OSU;
public class OSUFile
{
    public const string FORMAT = @"//Generated by Notusu
osu file format v14

[General]
AudioFilename: audio.mp3
AudioLeadIn: 0
PreviewTime: 0
Countdown: 0
SampleSet: Soft
StackLeniency: 0.7
Mode: 3
LetterboxInBreaks: 0
SpecialStyle: 0
WidescreenStoryboard: 0

[Editor]
DistanceSpacing: 2.05
BeatDivisor: 4
GridSize: 8
TimelineZoom: 1

[Metadata]
Title:{0}
TitleUnicode:{0}
Artist:{1}
ArtistUnicode:{1}
Creator:{2}
Version:{3}
Source:
Tags:
BeatmapID:0
BeatmapSetID:-1

[Difficulty]
HPDrainRate:5
CircleSize:{4}
OverallDifficulty:5
ApproachRate:5
SliderMultiplier:1.4
SliderTickRate:1

[Events]

[TimingPoints]
{5}

[HitObjects]
{6}

";

    public const string HEAD_METADATA = "[Metadata]";

    public const string HEAD_DIFFICULTY = "[Difficulty]";

    public const string HEAD_TIMING = "[TimingPoints]";

    public const string HEAD_HITOBJ = "[HitObjects]";

    public OSUFile()
    {
        Title = "";
        Artist = "";
        Creator = "";
        Version = "";
        TimingPoints = new();
        HitObjects = new();
    }

    public string Title { get; set; }

    public string Artist { get; set; }

    public string Creator { get; set; }

    public string Version { get; set; }

    public int Keys { get; set; }

    public List<OSUTimingPoint> TimingPoints { get; private set; }

    public List<OSUHitObject> HitObjects { get; private set; }



    public override string ToString()
    {
        StringBuilder timingPoints = new();
        StringBuilder hitObjects = new();
        foreach (var tp in TimingPoints)
        {
            timingPoints.Append(tp.ToString());
        }
        foreach (var ho in HitObjects)
        {
            hitObjects.Append(ho.ToString());
        }

        return string.Format(FORMAT, Title, Artist, Creator, Version, Keys, timingPoints.ToString(), hitObjects.ToString());
    }

    public static OSUFile FromString(string str)
    {
        throw new NotImplementedException();

        //var lines = str.Split('\n', StringSplitOptions.RemoveEmptyEntries | StringSplitOptions.TrimEntries);
    }
}